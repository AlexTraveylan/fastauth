[project]
name = "fastauth"
version = "0.1.3"
description = "Fastauth is a api's microservice for authentification with asyncronous postgres database. All in one docker-compose file. It got a /register, /login, /logout, /refresh, /me endpoints. Working with jwt tokens. You can also connect with google oauth."
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi[standard]>=0.115.11",
]

# ===============
# pytest
# ===============

[tool.pytest.ini_options]
pythonpath = ["."]
addopts = ["-v", "-s"]
testpaths = ["tests"]

# ===============
# ruff
# ===============

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

line-length = 88
indent-width = 4

target-version = "py313"

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "N", "D"]
ignore = ["D100"]

fixable = ["ALL"]
unfixable = []

dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
quote-style = "double"

indent-style = "space"

skip-magic-trailing-comma = false

line-ending = "auto"

docstring-code-format = true

docstring-code-line-length = "dynamic"

# ===============
# mypy
# ===============

[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true
disallow_untyped_defs = false
warn_return_any = true
warn_unused_configs = true
exclude = ['^tests/']

[dependency-groups]
dev = ["pytest>=8.3.5", "typer>=0.15.2"]
