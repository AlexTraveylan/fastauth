# FastAuth - Microservice d'Authentification

## À propos du projet
- Description: Microservice API d'authentification avec base de données PostgreSQL asynchrone
- Fonctionnalités: /register, /login, /logout, /refresh, /me, authentification OAuth Google
- Python: 3.13
- Gestionnaire de dépendances: uv

## Stack technique
- FastAPI, Pydantic
- SQLModel, Alembic
- PostgreSQL
- Docker
- Pytest

## Structure du projet
fastauth/
├── fastauth/
│   ├── main.py          # Point d'entrée de l'application
│   ├── models/          # Modèles de données SQLModel
│   ├── schemas/         # Schémas Pydantic de requête/réponse
│   ├── routers/         # Définition des routes API
│   └── services/        # Logique métier
├── alembic/             # Migrations de base de données
├── tests/               # Tests automatisés
│   ├── conftest.py
│   ├── factories/
│   ├── unit/
│   └── integration/
├── .env                 # Variables d'environnement
├── Dockerfile           # Configuration de l'image Docker
├── docker-compose.yml   # Configuration multi-conteneurs
└── pyproject.toml       # Configuration du projet


## Bonnes pratiques
1. Structure du code
- Utiliser des noms explicites pour les variables et fonctions
- Suivre PEP 8 pour le style de code
- Documenter avec des docstrings
- Utiliser des annotations de type partout

2. FastAPI
- Valider les entrées avec Pydantic
- Implémenter l'injection de dépendances
- Utiliser async/await pour les opérations non-bloquantes
- Gérer les erreurs avec HTTPException
- Configurer CORS correctement
- Utiliser les utilitaires de sécurité intégrés

3. Tests
- Utiliser pytest et pytest-asyncio
- Structurer les tests en "Given-When-Then"
- Créer des fixtures avec factoryboy et faker
- Privilégier les tests fonctionnels représentatifs du comportement de l'API
- Utiliser une base de données en mémoire

## Architecture
- API RESTful avec endpoints d'authentification
- Authentification par JWT
- Connexion OAuth Google
- Base de données PostgreSQL asynchrone
- Conteneurisation complète avec Docker Compose